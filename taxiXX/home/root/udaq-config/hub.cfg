// hub.cfg
//
// defines settings for the udaq field_hub application


name = "udaq-dist-dec_26_2024";   // identifies the config


comms_config =
{

udaq_tx_enable_delay = 250;       // delay in microseconds before transmitting a response to
                                  // give client serial implementation time to deassert the TX
                                  // enable line

udaq_tx_disable_delay = 150;      // delay in microseconds after writing the last byte of a response
                                  // but before deasserting the TX enable line to give UART/tranceiver
                                  // time to fully transmit the final byte.

udaq_frame_write_delay = 100000;  // delay in microseconds between frames of a multi-message 
                                  // response to give clients time to readout and process the
                                  // frames

app_tx_enable_delay = 150;        // delay in microseconds before transmitting a message to
                                  // give udaq time to deassert the TX enable line, should be
                                  // >udaq_tx_disable_delay

protocol="cobs";                  // the transport protocol
trace-protocol=false;             // trace message exchange
trace-stream=false;               // trace IO read/writes

};

// required by the application
app_config =
{

    data_page_size_bits = 10;             // 1K, must be same page size use by microdaq
    //data_page_buffer_size_bits = 17;    // 128K or
                                          //         128 1K pages
                                          //          64 2K pages
                                          //          32 4K pages
                                          //          16 8K pages
                                          //          8 16K pages
                                          //          4 32K pages
    
    data_page_buffer_size_bits = 23;      // 8 MB, can hold 4 seconds of 8 channels at 356 KB/s
                                          // data rate

    udaq_state_change_timout_ms = 10000;  // time allowance for transitioning an individual
                                          // microdaq to an application state before dropping
                                          // the channel
					  
    hub_state_change_timout_ms = 10000;   // time allowance for transitioning all
                                          // microdaqs to an application state before failting
                                          // the application
					  
    batch_acq_mode=false;                 // if true data aquisition will only occur at the end
                                          // of the run.

    page_poll_mode=0;                     // selects the method of page readout
                                          // 0 poll_ack.  : poll pages, page is held in udaq, retry readout on comm faults
                                          // 1 poll       : poll pages, page is consumed immediately
                                          // 2 poll_multi : read out mutiple pages per call, not retry
};

